name: CI/CD Pipeline

on:
  pull_request:
    branches: [ "main", "dev" ]

env:
  STAGE: test
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  TEST_DATABASE_HOST: localhost
  TEST_REDIS_HOST: localhost
  REDIS_HOST: localhost
  REDIS_PORT: 6379
  REDIS_DB: 0
  SECRET_KEY: ${{ secrets.SECRET_KEY }}
  ALGORITHM: ${{ secrets.ALGORITHM }}

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432

      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Wait for services
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client

        until pg_isready -h localhost -p 5432 -U ${{ secrets.POSTGRES_USER }}; do
          echo "Waiting for PostgreSQL..."
          sleep 3
        done

        sleep 5
        echo "PostgreSQL is ready!"

    - name: Run tests
      run: tox -e testing

  lint-and-format:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox

    - name: Run linting
      run: tox -e lint

    - name: Run formatting check
      run: tox -e format

    - name: Run security check
      run: tox -e security

    - name: Run type checking
      run: tox -e typecheck
