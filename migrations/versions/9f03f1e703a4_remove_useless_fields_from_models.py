"""Remove useless fields from models

Revision ID: 9f03f1e703a4
Revises: 8f53ea94b63d
Create Date: 2025-06-25 14:48:40.605801

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "9f03f1e703a4"
down_revision: Union[str, None] = "8f53ea94b63d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("idx_faction_culture_religion"), table_name="faction_culture")
    op.drop_index(
        op.f("idx_faction_positions"),
        table_name="faction_culture",
        postgresql_using="gin",
    )
    op.drop_index(
        op.f("idx_faction_projects"),
        table_name="faction_culture",
        postgresql_using="gin",
    )
    op.drop_index(
        op.f("idx_faction_structure"),
        table_name="faction_culture",
        postgresql_using="gin",
    )
    op.drop_index(op.f("ix_faction_culture_dominant_culture"), table_name="faction_culture")
    op.drop_index(op.f("ix_faction_culture_faction_id"), table_name="faction_culture")
    op.drop_index(op.f("ix_faction_culture_primary_religion"), table_name="faction_culture")
    op.drop_table("faction_culture")
    op.drop_index(op.f("idx_article_publication"), table_name="articles")
    op.drop_index(op.f("idx_article_related_chars"), table_name="articles", postgresql_using="gin")
    op.drop_index(
        op.f("idx_article_related_factions"),
        table_name="articles",
        postgresql_using="gin",
    )
    op.drop_index(op.f("idx_article_related_locs"), table_name="articles", postgresql_using="gin")
    op.drop_index(op.f("idx_article_related_races"), table_name="articles", postgresql_using="gin")
    op.drop_index(op.f("idx_article_tags"), table_name="articles", postgresql_using="gin")
    op.drop_index(op.f("ix_articles_canonical_status"), table_name="articles")
    op.drop_index(op.f("ix_articles_source_type"), table_name="articles")
    op.drop_index(op.f("ix_articles_visibility_level"), table_name="articles")
    op.drop_column("articles", "visibility_level")
    op.drop_column("articles", "source_type")
    op.drop_column("articles", "related_races")
    op.drop_column("articles", "related_locations")
    op.drop_column("articles", "tags")
    op.drop_column("articles", "related_characters")
    op.drop_column("articles", "canonical_status")
    op.drop_column("articles", "related_factions")
    op.drop_index(op.f("idx_game_stats_abilities"), table_name="character_game_stats")
    op.drop_index(
        op.f("idx_game_stats_skills"),
        table_name="character_game_stats",
        postgresql_using="gin",
    )
    op.drop_index(
        op.f("idx_game_stats_spells"),
        table_name="character_game_stats",
        postgresql_using="gin",
    )
    op.drop_index(op.f("ix_characters_campaign_id"), table_name="characters")
    op.drop_index(op.f("ix_characters_player_id"), table_name="characters")
    op.drop_column("characters", "strength")
    op.drop_column("characters", "wisdom")
    op.drop_column("characters", "epithets")
    op.drop_column("characters", "titles")
    op.drop_column("characters", "constitution")
    op.drop_column("characters", "player_id")
    op.drop_column("characters", "charisma")
    op.drop_column("characters", "campaign_id")
    op.drop_column("characters", "dexterity")
    op.drop_column("characters", "intelligence")
    op.drop_column("characters", "level")
    op.add_column("factions", sa.Column("dominant_culture", sa.String(length=50), nullable=True))
    op.add_column("factions", sa.Column("primary_religion", sa.String(length=50), nullable=True))
    op.add_column("factions", sa.Column("current_goals", sa.Text(), nullable=True))
    op.drop_index(
        op.f("idx_faction_alternative_names"),
        table_name="factions",
        postgresql_using="gin",
    )
    op.drop_index(
        op.f("idx_faction_description_fts"),
        table_name="factions",
        postgresql_using="gin",
    )
    op.drop_index(op.f("idx_faction_leader"), table_name="factions")
    op.drop_index(op.f("ix_factions_full_name"), table_name="factions")
    op.create_index(
        "idx_faction_culture_religion",
        "factions",
        ["dominant_culture", "primary_religion"],
        unique=False,
    )
    op.create_index(
        op.f("ix_factions_dominant_culture"),
        "factions",
        ["dominant_culture"],
        unique=False,
    )
    op.create_index(
        op.f("ix_factions_primary_religion"),
        "factions",
        ["primary_religion"],
        unique=False,
    )
    op.drop_column("factions", "alternative_names")
    op.drop_column("factions", "full_name")
    op.drop_index(
        op.f("idx_location_alternative_names"),
        table_name="locations",
        postgresql_using="gin",
    )
    op.drop_index(
        op.f("idx_location_description_fts"),
        table_name="locations",
        postgresql_using="gin",
    )
    op.drop_index(op.f("ix_locations_climate"), table_name="locations")
    op.drop_index(op.f("ix_locations_map_x"), table_name="locations")
    op.drop_index(op.f("ix_locations_map_y"), table_name="locations")
    op.drop_index(op.f("ix_locations_region"), table_name="locations")
    op.drop_column("locations", "alternative_names")
    op.drop_column("locations", "terrain")
    op.drop_index(op.f("idx_race_abilities"), table_name="races", postgresql_using="gin")
    op.drop_index(op.f("idx_race_languages"), table_name="races", postgresql_using="gin")
    op.drop_index(op.f("idx_race_playable_size"), table_name="races")
    op.drop_index(op.f("idx_race_regions"), table_name="races", postgresql_using="gin")
    op.drop_index(op.f("idx_race_stat_bonuses"), table_name="races", postgresql_using="gin")
    op.drop_column("races", "average_height")
    op.drop_column("races", "stat_bonuses")
    op.drop_column("races", "average_weight")
    op.drop_column("races", "physical_features")
    op.drop_column("races", "languages")
    op.drop_column("races", "racial_abilities")
    op.drop_column("races", "homeland_regions")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "races",
        sa.Column(
            "homeland_regions",
            postgresql.ARRAY(sa.VARCHAR()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "races",
        sa.Column(
            "racial_abilities",
            postgresql.ARRAY(sa.TEXT()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "races",
        sa.Column(
            "languages",
            postgresql.ARRAY(sa.VARCHAR()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "races",
        sa.Column("physical_features", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "races",
        sa.Column("average_weight", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    )
    op.add_column(
        "races",
        sa.Column(
            "stat_bonuses",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "races",
        sa.Column("average_height", sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    )
    op.create_index(
        op.f("idx_race_stat_bonuses"),
        "races",
        ["stat_bonuses"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_race_regions"),
        "races",
        ["homeland_regions"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(op.f("idx_race_playable_size"), "races", ["is_playable", "size"], unique=False)
    op.create_index(
        op.f("idx_race_languages"),
        "races",
        ["languages"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_race_abilities"),
        "races",
        ["racial_abilities"],
        unique=False,
        postgresql_using="gin",
    )
    op.add_column(
        "locations",
        sa.Column("terrain", sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    )
    op.add_column(
        "locations",
        sa.Column(
            "alternative_names",
            postgresql.ARRAY(sa.VARCHAR()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.create_index(op.f("ix_locations_region"), "locations", ["region"], unique=False)
    op.create_index(op.f("ix_locations_map_y"), "locations", ["map_y"], unique=False)
    op.create_index(op.f("ix_locations_map_x"), "locations", ["map_x"], unique=False)
    op.create_index(op.f("ix_locations_climate"), "locations", ["climate"], unique=False)
    op.create_index(
        op.f("idx_location_description_fts"),
        "locations",
        ["description"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_location_alternative_names"),
        "locations",
        ["alternative_names"],
        unique=False,
        postgresql_using="gin",
    )
    op.add_column(
        "factions",
        sa.Column("full_name", sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    )
    op.add_column(
        "factions",
        sa.Column(
            "alternative_names",
            postgresql.ARRAY(sa.VARCHAR()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_index(op.f("ix_factions_primary_religion"), table_name="factions")
    op.drop_index(op.f("ix_factions_dominant_culture"), table_name="factions")
    op.drop_index("idx_faction_culture_religion", table_name="factions")
    op.create_index(op.f("ix_factions_full_name"), "factions", ["full_name"], unique=False)
    op.create_index(
        op.f("idx_faction_leader"),
        "factions",
        ["current_leader_name", "leadership_type"],
        unique=False,
    )
    op.create_index(
        op.f("idx_faction_description_fts"),
        "factions",
        ["description"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_faction_alternative_names"),
        "factions",
        ["alternative_names"],
        unique=False,
        postgresql_using="gin",
    )
    op.drop_column("factions", "current_goals")
    op.drop_column("factions", "primary_religion")
    op.drop_column("factions", "dominant_culture")
    op.add_column(
        "characters",
        sa.Column("level", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "characters",
        sa.Column("intelligence", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "characters",
        sa.Column("dexterity", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "characters",
        sa.Column("campaign_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "characters",
        sa.Column("charisma", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "characters",
        sa.Column("player_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "characters",
        sa.Column("constitution", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "characters",
        sa.Column("titles", postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    )
    op.add_column(
        "characters",
        sa.Column(
            "epithets",
            postgresql.ARRAY(sa.VARCHAR()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "characters",
        sa.Column("wisdom", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "characters",
        sa.Column("strength", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.create_index(op.f("ix_characters_player_id"), "characters", ["player_id"], unique=False)
    op.create_index(op.f("ix_characters_campaign_id"), "characters", ["campaign_id"], unique=False)
    op.create_index(
        op.f("idx_game_stats_spells"),
        "character_game_stats",
        ["spells_known"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_game_stats_skills"),
        "character_game_stats",
        ["proficient_skills"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_game_stats_abilities"),
        "character_game_stats",
        ["strength", "dexterity", "constitution"],
        unique=False,
    )
    op.add_column(
        "articles",
        sa.Column(
            "related_factions",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "articles",
        sa.Column(
            "canonical_status",
            sa.VARCHAR(length=20),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "articles",
        sa.Column(
            "related_characters",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "articles",
        sa.Column("tags", postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    )
    op.add_column(
        "articles",
        sa.Column(
            "related_locations",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "articles",
        sa.Column(
            "related_races",
            postgresql.ARRAY(sa.INTEGER()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "articles",
        sa.Column("source_type", sa.VARCHAR(length=30), autoincrement=False, nullable=True),
    )
    op.add_column(
        "articles",
        sa.Column(
            "visibility_level",
            sa.VARCHAR(length=20),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.create_index(
        op.f("ix_articles_visibility_level"),
        "articles",
        ["visibility_level"],
        unique=False,
    )
    op.create_index(op.f("ix_articles_source_type"), "articles", ["source_type"], unique=False)
    op.create_index(
        op.f("ix_articles_canonical_status"),
        "articles",
        ["canonical_status"],
        unique=False,
    )
    op.create_index(
        op.f("idx_article_tags"),
        "articles",
        ["tags"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_article_related_races"),
        "articles",
        ["related_races"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_article_related_locs"),
        "articles",
        ["related_locations"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_article_related_factions"),
        "articles",
        ["related_factions"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_article_related_chars"),
        "articles",
        ["related_characters"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_article_publication"),
        "articles",
        ["is_published", "publication_date"],
        unique=False,
    )
    op.create_table(
        "faction_culture",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("faction_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "dominant_culture",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "primary_religion",
            sa.VARCHAR(length=50),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("cultural_practices", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("symbols_and_heraldry", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "internal_structure",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "key_positions",
            postgresql.ARRAY(sa.VARCHAR()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("membership_requirements", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("internal_politics", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("current_goals", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("current_conflicts", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "current_projects",
            postgresql.ARRAY(sa.VARCHAR()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["faction_id"],
            ["factions.id"],
            name=op.f("faction_culture_faction_id_fkey"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("faction_culture_pkey")),
    )
    op.create_index(
        op.f("ix_faction_culture_primary_religion"),
        "faction_culture",
        ["primary_religion"],
        unique=False,
    )
    op.create_index(
        op.f("ix_faction_culture_faction_id"),
        "faction_culture",
        ["faction_id"],
        unique=True,
    )
    op.create_index(
        op.f("ix_faction_culture_dominant_culture"),
        "faction_culture",
        ["dominant_culture"],
        unique=False,
    )
    op.create_index(
        op.f("idx_faction_structure"),
        "faction_culture",
        ["internal_structure"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_faction_projects"),
        "faction_culture",
        ["current_projects"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_faction_positions"),
        "faction_culture",
        ["key_positions"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("idx_faction_culture_religion"),
        "faction_culture",
        ["dominant_culture", "primary_religion"],
        unique=False,
    )
    # ### end Alembic commands ###
