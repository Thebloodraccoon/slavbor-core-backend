[tox]
envlist = py310, lint, format, security, typecheck, testing
skip_missing_interpreters = true
isolated_build = false
parallel_show_output = true

[testenv]
recreate = false
skip_install = true
download = false
pip_pre = false
allowlist_externals = poetry
setenv =
    STAGE=test
passenv = *

[testenv:testing]
commands =
    poetry run pytest --cache-clear \
           --cov=app/ \
           --cov-report=term-missing \
           --cov-report= \
           --cov-fail-under=0 \
           --cov-config=tox.ini \
           {posargs:tests/}

[testenv:lint]
commands =
    poetry run flake8 app/ tests/

[testenv:format]
commands =
    poetry run black app/ tests/ migrations/versions
    poetry run isort app/ tests/ migrations/versions

[testenv:security]
commands =
    poetry run bandit -r app/

[testenv:typecheck]
commands =
    poetry run mypy app/

[flake8]
max-line-length = 120
ignore = E501
exclude = .git,__pycache__,build,dist,app/settings
statistics = true
show-source = true
max-complexity = 10

[mypy]
ignore_missing_imports = True
disallow_untyped_defs = true
check_untyped_defs = true
warn_return_any = true
warn_unused_configs = true

[bandit]
exclude: /test

[pytest]
asyncio_mode = strict
asyncio_default_fixture_loop_scope = function

[coverage:run]
omit =
    */__init__.py
    app/settings/*
    app/constants.py
    app/main.py